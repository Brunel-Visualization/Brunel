#### Action library to be used, old style format

clusterBarCount :: bar x($1,$2) y(#count) color($2)                         :: categorical, categorical
clusterLine     :: line x($1,$2) y($3) color($1) smooth($3)                 :: categorical, any, any
colorScatter	:: x($1) y($2) color($3)                                    :: any, any, any
line	        :: line x($1) y($2) color($3)                               :: any, any, categorical
cloud           :: x($1) cloud size($2) color($2) sort($2) mean($2)         :: categorical, numeric
multiline       :: line x($1) y($2) color(#series) mean($2)                 :: any, multiple
tree            :: tree x($2) size($1:200%) color($1) sort($2)              :: numeric, multiple-categorical
treemap         :: treemap x($2) size(#count) label($1) list($1:50)         :: any, multiple-categorical
sizedBar	    :: bar x($1) y(#count) size($2:100) color($2:blue) mean($2) sort(#count)    :: categorical, any

#### The Tests

colorScatter baseball Age HomeRunRate Salary / axes(x:grid, y:grid)  legends(floating)       :: pass
colorScatter whiskey Rating Price Category / axes(x:grid, y:grid) symbol(Category) legends(floating)   :: pass     :: Note the log Y axis and symbols
colorScatter cpi Date ALL ALL / axes(x:grid:'Custom X axis title')    legends(floating)                 :: pass     :: Only x axis should be shown, with grid and title
colorScatter cpi Date Date ALL / axes(x:grid, y:grid)  x(Date:reverse)  legends(floating)  :: pass     :: X-axis should be reversed

colorScatter whiskey Country Brand Rating           :: pass
colorScatter whiskey Category Country #count        :: pass
colorScatter whiskey Category 5 #count  / title("Title", "Footnote":footer)             :: pass     :: circles drawn because 'y' is numeric -- should have title and footnote
colorScatter whiskey Category 'a' #count  / transpose label(Category)          :: pass     :: rectangles because both dimensions are categorical

line baseball Age HomeRunRate Salary                :: pass
line whiskey Rating Age Category                    :: pass
line whiskey Rating Age Category / transpose        :: pass     :: Note: transposed.
line cpi Date ALL 'overall' / transpose             :: pass     :: Note: transposed

cloud whiskey category rating / style("font-family:Impact, Charcoal, sans-serif")               :: pass
cloud whiskey brand rating   / cloud(rectangular)     :: pass     :: Rectangular layout
cloud whiskey name rating  :: pass
cloud baseball age Salary                           :: pass

sizedBar baseball age salary  / interaction(panzoom:x)              :: pass     :: Can pan/zoom on x only
sizedBar whiskey country rating / transpose interaction(panzoom:x)  :: pass     :: Can pan/zoom on x only
sizedBar whiskey age rating /interaction(panzoom:x)                 :: pass     :: Can pan/zoom on x only
sizedBar cpi Date ALL / interaction(panzoom:x)                      :: pass     :: The data is regular, so the counts are similar up to the last year

multiline cpi Date food housing health transport                    :: pass
multiline cpi Date food housing health transport / stack            :: pass ::  Note that the stacking order is 'food housing health transport'
multiline whiskey country rating abv / label(#series) sort(rating) size(#series:1000)  split(#series) :: pass :: Note that we have sorted by rating so that line should decrease left-to-right
multiline whiskey rating country category / point bin(rating)       :: pass

clusterBarCount simple mammal aquatic                               :: pass
clusterBarCount whiskey country category  / bin(category:4)         :: pass
clusterBarCount whiskey age abv                                     :: pass
clusterLine whiskey category age rating / bin(category:4)           :: pass

- cpi       / line x(Date) y(CLOTHING, HOUSING)                                 :: pass     :: Should split automatically
- cpi       / line x(Date) y(CLOTHING, HOUSING) label(#series)                  :: pass     :: Should split automatically
- baseball  / path x(weight) y(height) + text x(weight) y(height) label(#row)   :: pass :: Messy, but correct
- baseball / path x(weight) y(height) | line x(weight) y(height)  | polygon x(weight) y(height) | area x(weight) y(height)    :: pass     :: Left is not sorted, right is

treemap whiskey brand country category                              :: improve  :: Labels are good, but the treemap doesn't make areas very accurately
- whiskey / bar x(ABV) y(#count) bin(ABV) sort(#count) label(brand) tooltip(#all) list(brand:50) :: pass
colorScatter whiskey age rating category / label(brand:3)             :: pass     :: Make sure the labels move when panning
multiline cpi Date food housing health transport / stack area label(#series)      :: pass :: Note that the stacking order is the order the fields were defined in 'y'

- simple	/ bar x(animal) y(size) color(animal) sort(size) filter(size, #row, animal, mammal) :: pass
- simple	/ bar x(animal) y(size) color(mammal) transpose                                     :: pass
- baseball  / x(age) y(salary) color(rbirate) | line x(age) y(rbirate) smooth(rbirate)          :: pass :: Legend should be attached to chart on left
- simple	/ bar x(mammal) y(size) color(aquatic) stack label(#all) tooltip(aquatic:snap:50, #count)   :: pass :: note the tooltip should snap within 50 pixels

- whiskey	/ bar x(country) y(#count) color(category) stack                                    :: pass
- whiskey	/ bar x(country) y(#count) percent(#count) color(category) stack                    :: pass
- whiskey	/ bar y(#count) color(country) stack polar label(country)                           :: pass
- cpi	    / bar x(housing) bin(housing) y(#count)  style('fill:url(#_gradient_linear_blue);stroke:none')                                           :: pass

- simple	/ area x(animal) y(size) color(mammal) stack                                       :: pass
- whiskey	/ area y(#count) x(country) color(category) stack                                   :: pass
- whiskey	/ area y(#count) percent(#count) x(country) color(category) stack                   :: pass
- cpi	    / area x(date) yrange(food, housing)                                                 :: pass

- simple	/ bar y(size) color(animal) stack polar label(#all)                                 :: pass
- whiskey	/ point x(Price) y(Rating) color(country) tooltip('(', Price, ',' , Rating, ')') style('size:40px; fill-opacity:0.2') :: pass
- whiskey	/ edge yrange(country, category) chord size(#count) color(country) tooltip(#all)        :: pass
- whiskey	/ point size(#count) color(country) bubble label(country, '\n', #count) tooltip(#all)   :: improve :: should respect the newline character

- simple	/ bar x(mammal, aquatic) size(#count) color(#count) label('Mammal=':top, mammal:top, 'Aquatic=':bottom, aquatic:bottom) treemap tooltip(#all)   :: pass
- whiskey	/ bar x(country, category) size(#count) mean(Rating) color(Rating) label(Country, ',' , category) treemap tooltip(#all)     :: pass
- baseball	/ bar x(HomeRunRate) y(Salary)                             :: pass
- baseball	/ bar x(HomeRunRate) y(Salary) transpose                   :: improve :: axes labels clash

- baseball	/ point size(SlugRate) color(Salary) bubble                                                                     :: pass
- baseball	/ point x(PutOutRate) y(AssistRate) color(SlugRate) size(salary) sort(salary) style('size:300%') tooltip(#all)  :: pass
- cpi	    / point x(food) y(housing) bin(housing, food) color(#count) style('symbol:rect; border-radius:5px')             :: improve :: less axes spacing at zero
- baseball  / x(Weight) y(Height) + line x(Weight) y(Height) fit(Height) | x(Weight) y(Height) + line x(Weight) y(Height) smooth(Height) | x(Weight) y(Height) + line x(Weight) y(Height) smooth(Height:10) | x(Weight) y(Height) + line x(Weight) y(Height) smooth(Height:200) :: pass

- simple    / data('raw:state;AK;AL;AR;AZ;CA;CO;CT;DC;DE;FL;GA;HI;IA;ID;IL;IN;KS;KY;LA;MA;MD;ME;MI;MN;MO;MS;MT;NC;ND;NE;NV;NH;NJ;NM;NY;OH;OK;OR;PA;RI;SC;SD;TN;TX;UT;VA;VT;WA;WI;WV;WY') map x(state) color(#row) label(state)  legends(floating)  :: pass
- simple    / data('raw:x;USA;Canada') map x(x) label(x) legends(none) style('fill:url(#_gradient_radial_red);stroke:none') :: pass
- simple    / data('raw:x;France;Argentina;brazil') map x(x) color(x) label(x) legends(none)  :: pass
- simple    / data('raw:x;USA;Canada;Mexico') map x(x) color(x) label(x) legends(none) :: pass
- simple    / data('raw:state;Texas;Arizona;California') map('https://brunelvis.org/geo/2.3/med/UnitedStatesofAmerica.json')  x(state) label(state) :: pass

- simple    / map + data('raw:x,y;10,50;100,0') x(x) y(y) axes(x,y) label(x, y) :: pass
- simple    / map + data('raw:n,x,y;London,-0.12,51.5;Paris,2.3,48.8') x(x) y(y) label(n) axes(x,y)  + map(labels:200) :: pass
- simple    / map + data('raw:n,x,y,s;Tokyo,139.7,35.7,8.3;Yokohama,139.6,35.4,3.5;Osaka-shi,135.5,34.7,2.6;Sapporo,141.3,43,1.8') x(x) y(y) size(s:300) symbol(s) label(n) :: pass
- simple    / map('uk','france','spain','germany') + map(labels) :: pass

- cpi       / x(food) y(housing) color(DATE) + line  x(food) y(housing) fit(housing) :: pass
- whiskey   / bubble color(#count) size(#count) sort(#count) label(brand:1) | bubble color(#count) size(#count) sort(#count:ascending) label(brand:1) :: pass :: Two different sort orders
- simple    / x(#row) y('reds') color(#row:reds) axes(y) legends(none) + x(#row) y('red') color(#row:red) legends(none) + x(#row) y('blues-reds') color(#row:[blues, reds]) legends(none) + x(#row) y('blue-red') color(#row:[blue, red]) legends(none) + x(#row) y('blue-none-red') color(#row:[blue, none, red]) legends(none)  + x(#row) y('blue-black-red') color(#row:[blue, black, red]) legends(none) + x(#row) y('nominal') color(#row:nominal)  legends(none) :: pass
- simple    / data('raw:A,B;a,b;a,c;a,d;b,c;a,e;e,f;g,h;m,n;n,o') edge style('symbol:curved') key(A, B) + data('raw:A;a;b;c;d;e;f;g;h;n;o') network key(A) color(A) label(A) legends(none) style('fill-opacity:1;size:20px') :: pass :: Note curved edges with no arrowheads

tree whiskey #count category country / css(rating) :: pass
tree whiskey #count category rating age / polar tree(prune) symbol(category) size(#count) :: pass
- simple    / data('raw:ID,PARENT;a,b;a,c;a,d;b,e;b,f;f,g') edge css(#row) color(parent) key(id, parent) + data('raw:ID;a;b;c;d;e;f;g') tree color(id) key(id) label(id) size(#row) style('size:50px; symbol:person; label-location:bottom') :: pass
- simple    / data('raw:ID,PARENT;a,b;a,c;a,d;b,e;b,f;f,g') edge css(#row) color(parent) key(id, parent) + data('raw:ID;a;b;c;d;e;f;g') tree color(id) key(id) label(id) size(#row) symbol(#row) style('size:50px; label-location:bottom') :: pass

- simple    / data('raw:x;"a,b";"a";"a,c,b";"a,b";"a,b";"a,b,c"') bar x(x) y(#count) color(x) | bar x(x) y(#count) color(x) each(x) | bubble color(x) size(#count) label(x) | bubble color(x) size(#count) label(x) each(x) :: pass
- baseball  / x(PutOutRate) y(AssistRate) style('.axis.y .tick text{fill:red;padding-right:10px}') style('.axis.x .tick text{fill:blue;font-size:1cm; padding:2mm} .axis .tick line{size:-5mm} ') style('.axis .title {label-location:left;font-size:20px}') style('.axis .title {label-location:left;font-size:20px;font-style:italic;padding-left:1in}') style('.header {fill:red;font-size:40px;padding-bottom:50px;label-location:right}') title('Ugly Style test') :: pass
colorScatter whiskey Rating Price Category / y(Price:linear) rectangular(aspect:1.0, square)         :: pass     :: Data aspect ratio should be square, and chart interior should be also
- baseball   / y(PutOutRate) x(AssistRate) key(#row) label(#row) top(#row:20) + data("raw:A,B;0,1;1,2;2,3;3,4;3,5;3,6") key(A,B) css(A) edge:: pass :: Some random links for early rows, with css styled items

colorScatter baseball slugrate Salary age / + label('guide for salary') guide(y:'x*10000000') style('stroke:red')        :: pass
- whiskey / gridded x(country) color(rating:[black, red]) size(rating) symbol(country) :: gridded is experimental at the moment
- whiskey / bubble x(country) color(rating:[black, red]) size(#count) symbol(country:[person, diamond, hexagon]) tooltip(#all) :: pass
- whiskey / gridded color(abv:blues) size(price:200%) symbol(#row:'http://brunelvis.org/test/testsym.svg':[pool, spa, beach_access]) :: pass

colorScatter whiskey rating price Category / size(Category:[200%,100%,100%]) key(#row) + data('raw:a,b;0,1;1,2;2,4;4,8;8,16;16,32;32,64') edge key(a,b) color(#row:nominal) label(#row)  :: pass
- whiskey / bubble x(rating) bin(rating:20) sort(price) size(price) symbol(category) key(#row) + style('symbol:curved') data('raw:a,b;0,1;1,2;2,4;4,8;8,16;16,32;32,64') edge key(a,b) color(#row:nominal) label(#row)  :: pass
- whiskey / map  key(country) + data('raw:a,b;Canada,France;France,India;India,Japan') edge key(a,b) style('symbol:curved') color(#row:nominal) label(#row)  :: pass
- baseball / x('Top 5') y(age) top(age:5) + x('Top 6-10') y(age) top(age:6:10) + x('Bottom 6-10') y(age) bottom(age:6:10) axes(x, y) + x('Bottom 5') y(age) bottom(age:5) :: pass

colorScatter cpi CLOTHING HEALTH Date / rectangular(same) + guide(y:x):: pass :: note axes have same span
colorScatter cpi CLOTHING HEALTH Date / rectangular(same, square) + guide(y:x) :: pass :: note chart has square inner

- cpi / bar x(date) y(all) bin(date:20) mean(all) + line x(date) y(furniture:[80, 120]) dualaxes bin(date:20) mean(furniture) style('.axis.y1 text {fill:red}') style('.axis.y text {fill:blue}') interaction(panzoom:x) :: pass

#### Note

baseball:   Age Weight Height BattingAvg OnBasePct HomeRunRate SlugRate RBIRate WalkRate
            StrikeRate StolenBases HitByPitch PutOutRate AssistRate ErrorRate Salary

whiskey:    Name Rating Country Category Price ABV Age Brand

cpi:        Date DateLabel ALL FOOD ALCOHOL/TOBACCO CLOTHING HOUSING FURNITURE HEALTH
            TRANSPORT COMMUNICATION RECREATION EDUCATION MISC
